"""
Django settings for csafe project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Check environment variable CSAFE_INTENT:
# If PRODUCTION then set up for production use
# If DEV then set up for development use
# If PROD_TEST then set up for production but leave DEBUG = True
if 'CSAFE_INTENT' in os.environ:
    INTENT = os.environ['CSAFE_INTENT']
    print(f"PRODUCTION_INTENT = {INTENT}")
else:
    print('"CSAFE_INTENT not in environment variables - STOPPING')


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(f"BASE_DIR = {BASE_DIR}")
TEMPLATE_DIR = os.path.join(BASE_DIR, 'safe/templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'g*1ctn=di8dtkf3am-267_6)+*2x7%5od&=vo1)qpko_7)5pbx'

# SECURITY WARNING: don't run with debug turned on in production!
if INTENT == 'PRODUCTION':
    DEBUG = False
else:
    DEBUG = True

ALLOWED_HOSTS = ['192.168.0.*',
                '127.0.0.1',
                'localhost',]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap4',
    'safe',
    'api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'csafe.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'csafe.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if INTENT == 'DEV':
    print("Environment is dev.  Setting up for postgres database")
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'django',
            'USER': 'sean',
            'PASSWORD': 'sean',
            'HOST': 'iMac.local',
            'PORT': '5432',
        }
    }
else:
    print('No environment variables for MYSQL - defaulting to sqlite')
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS':{'min_length':8}
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

#PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
# if INTENT in ['PRODUCTION', 'PROD_TEST']:
#     STATIC_ROOT = '/home/site/wwwroot/csafe'
# else:
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
print(f"STATIC_ROOT = {STATIC_ROOT}")
STATICFILES_DIRS = [
    '/csafe-server/static/',
]

STATIC_URL = '/static/'
LOGIN_URL = '/safe/login/'
